{"version":3,"sources":["./src/app/services/transfer.service.ts","./src/environments/environment.ts","./src/app/extract/extract.component.html","./src/app/extract/extract.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/new-transfer/new-transfer.component.ts","./src/app/new-transfer/new-transfer.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQO,MAAM,eAAe;IAK1B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFlC,QAAG,GAAG,iCAAiC,CAAC;QAG9C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,GAAG;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAa,IAAI,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;IAED,GAAG,CAAC,QAAa;QACf,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAEO,OAAO,CAAC,QAAa;QAC3B,QAAQ,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAC7B,CAAC;;8EAxBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;ICR3D,wEAA0D;IACtD,wEAA6B;IAAA,uDAAkC;;IAAA,4DAAK;IACpE,wEAA6B;IAAA,uDAA+B;;IAAA,4DAAK;IACjE,wEAA6B;IAAA,uDAAyB;IAAA,4DAAK;IAC/D,4DAAK;;;IAH4B,0DAAkC;IAAlC,wLAAkC;IAClC,0DAA+B;IAA/B,gLAA+B;IAC/B,0DAAyB;IAAzB,qHAAyB;;;IAJ9D,wEAA6C;IACzC,kHAIK;IACT,4DAAQ;;;IAL2C,0DAAS;IAAT,kFAAS;;;IAQ5D,oEAAG;IAAA,mFAAwB;IAAA,4DAAI;;ACN5B,MAAM,gBAAgB;IAI3B,YAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAAI,CAAC;IAEjD,QAAQ;QACJ,uCAAuC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,MAAkB,EAAE,EAAE;YACpD,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,MAAM;QACtB,CAAC,CAAC;IACJ,CAAC;;gFAZU,gBAAgB;gGAAhB,gBAAgB;QDT7B,2EAAsB;QAClB,2EAAiC;QAC7B,wEAAwC;QAAA,+DAAI;QAAA,4DAAK;QACjD,wEAAwC;QAAA,gEAAK;QAAA,4DAAK;QAClD,wEAAwC;QAAA,sEAAW;QAAA,4DAAK;QAC5D,4DAAQ;QACR,gHAMQ;QACZ,4DAAQ;QACR,wMAEc;;;QAVF,0DAA0B;QAA1B,qHAA0B;;;;;;;;;;;;;;;;;;;;;;;;AEE/B,MAAM,YAAY;IAGvB,YAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QAF5C,UAAK,GAAG,WAAW,CAAC;IAE2B,CAAC;IAEhD,QAAQ,CAAC,MAAM;QACb,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;;wEAPU,YAAY;4FAAZ,YAAY;QCRzB,sFACsC;QAAlC,kKAAgB,oBAAgB,IAAC;QACrC,4DAAmB;QAEnB,yEAA2B;;;;;;;;;;;;;;ACJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqH;AACxE;AACa;AACQ;AACnB;AAC8B;AACd;AACb;AACM;;AAExD,0EAAkB,CAAC,iEAAQ,EAAE,IAAI,CAAC,CAAC;AA2B5B,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cANR,2DAAY;6FAPb;QACT,EAAE,OAAO,EAAE,uDAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;QACtC;YACE,OAAO,EAAE,mEAAqB;YAC9B,QAAQ,EAAE,KAAK;SAChB;KACF,YAZQ;YACP,uEAAa;YACb,0DAAW;YACX,4DAAY;YACZ,qEAAgB;SACjB;mIAcU,SAAS,mBAvBlB,2DAAY;QACZ,yFAAoB;QACpB,2EAAgB,aAGhB,uEAAa;QACb,0DAAW;QACX,4DAAY;QACZ,qEAAgB;;;;;;;;;;;;;ACrBpB;AAAA;AAAA;AAAA;AAA6C;;;AAQtC,MAAM,oBAAoB;IANjC;QAQc,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;QACvC,mBAAc,GAAG,IAAI,0DAAY,EAAU,CAAC;KA0BzD;IArBG,QAAQ;QACJ,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;QACrC,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE;YACd,MAAM,SAAS,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;YACvE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;IACL,CAAC;IAED,WAAW;QACP,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,CAAC;IAEO,KAAK;QACT,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;SAC1D;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;;wFA5BQ,oBAAoB;oGAApB,oBAAoB;QCTjC,6EAA2B;QACzB,0EAAiD;QAAxB,gJAAY,cAAU,IAAC;QAC9C,wEAA+B;QAAA,uEAAY;QAAA,4DAAK;QAEhD,yEAAwB;QACtB,2EAAiC;QAAA,gEAAK;QAAA,4DAAQ;QAC9C,2EAA2F;QAAjC,uLAAmB;QAA7E,4DAA2F;QAC7F,4DAAM;QAEN,yEAAwB;QACtB,2EAAiC;QAAA,uEAAW;QAAA,4DAAQ;QACpD,4EAA2G;QAA7C,8LAAyB;QAAvF,4DAA2G;QAC7G,4DAAM;QAEN,0EAA2B;QACzB,6EAAoC;QAAA,oEAAQ;QAAA,4DAAS;QACvD,4DAAM;QAER,4DAAO;QACT,4DAAU;;QAbsD,0DAAmB;QAAnB,8EAAmB;QAKf,0DAAyB;QAAzB,oFAAyB;;;;;;;;;;;;;;;;;;;;ACX9C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Transfer } from '../models/transfer.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransferService {\n\n  private listTransfer: any[];\n  private url = 'http://localhost:3000/transfers';\n\n  constructor(private httpClient: HttpClient) {\n    this.listTransfer = [];\n  }\n\n  get transfers() {\n    return this.listTransfer;\n  }\n\n  all(): Observable<Transfer[]>{\n    return this.httpClient.get<Transfer[]>(this.url);\n  }\n\n  add(transfer: any) {\n    this.hydrate(transfer);\n    this.listTransfer.push(transfer);\n  }\n\n  private hydrate(transfer: any) {\n    transfer.date = new Date();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<table class=\"tabela\">\n    <thead class=\"tabela__cabecalho\">\n        <th class=\"tabela__cabecalho__conteudo\">Date</th>\n        <th class=\"tabela__cabecalho__conteudo\">Value</th>\n        <th class=\"tabela__cabecalho__conteudo\">Destination</th>\n    </thead>\n    <tbody *ngIf=\"shifts?.length > 0; else list\">\n        <tr class=\"tabela__linha\" *ngFor=\"let transfer of shifts\">\n            <td class=\"tabela__conteudo\">{{transfer?.date | date: 'short'}}</td>\n            <td class=\"tabela__conteudo\">{{transfer?.value | currency }}</td>\n            <td class=\"tabela__conteudo\">{{transfer?.destination}}</td>\n        </tr>\n    </tbody>\n</table>\n<ng-template #list>\n    <p>No operations registered</p>\n</ng-template>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Transfer } from '../models/transfer.model';\nimport { TransferService } from '../services/transfer.service';\n\n@Component({\n  selector: 'app-extract',\n  templateUrl: './extract.component.html',\n  styleUrls: ['./extract.component.scss']\n})\nexport class ExtractComponent implements OnInit {\n\n  shifts: any[];\n\n  constructor(private service: TransferService) { }\n\n  ngOnInit(): void {\n      //this.shifts = this.service.transfers;\n      this.service.all().subscribe((shifts: Transfer[]) => {\n      console.table(shifts);\n      this.shifts = shifts\n    })\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { TransferService } from './services/transfer.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'cryptbank';\n\n  constructor(private service: TransferService) {}\n\n  transfer($event) {\n    this.service.add($event);\n  }\n}\n","<app-new-transfer \r\n    (whenTransfer)=\"transfer($event)\">\r\n</app-new-transfer>\r\n\r\n<app-extract></app-extract>\r\n","import { LOCALE_ID, NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA, DEFAULT_CURRENCY_CODE } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { registerLocaleData, CommonModule } from '@angular/common'\nimport { AppComponent } from './app.component';\nimport { NewTransferComponent } from './new-transfer/new-transfer.component';\nimport { ExtractComponent } from './extract/extract.component';\nimport localePt from '@angular/common/locales/pt';\nimport { HttpClientModule } from '@angular/common/http';\n\nregisterLocaleData(localePt, 'pt');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewTransferComponent,\n    ExtractComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'pt' },\n    {\n      provide: DEFAULT_CURRENCY_CODE,\n      useValue: 'BRL'\n    }\n  ],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","import { Component, Output } from \"@angular/core\";\r\nimport { EventEmitter } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'app-new-transfer',\r\n    templateUrl: './new-transfer.component.html',\r\n    styleUrls: ['./new-transfer.component.scss']\r\n\r\n})\r\nexport class NewTransferComponent {\r\n\r\n    @Output() whenTransfer = new EventEmitter<any>();\r\n    @Output() valueWithError = new EventEmitter<string>();\r\n\r\n    value: number;\r\n    destination: number;\r\n\r\n    transfer() {\r\n        console.log('Requested new transfer')\r\n        if (this.Valid()) {\r\n            const valueEmit = { value: this.value, destination: this.destination };\r\n            this.whenTransfer.emit(valueEmit);\r\n            this.clearFields();\r\n        }\r\n    }\r\n\r\n    clearFields() {\r\n        this.value = 0;\r\n        this.destination = 0;\r\n    }\r\n\r\n    private Valid() {\r\n        const valid = this.value > 0;\r\n        if (!valid) {\r\n            this.valueWithError.emit('Please enter a valid value');\r\n        }\r\n        return valid;\r\n    }\r\n}","<section class=\"container\">\r\n  <form class=\"formulario\" (ngSubmit)=\"transfer()\">\r\n    <h2 class=\"formulario__titulo\">New Transfer</h2>\r\n\r\n    <div class=\"form-field\">\r\n      <lable class=\"form-field__label\">Value</lable>\r\n      <input class=\"form-field__input\" id=\"value\" type=\"number\" [(ngModel)]=\"value\" name=\"value\">\r\n    </div>\r\n\r\n    <div class=\"form-field\">\r\n      <lable class=\"form-field__label\">Destination</lable>\r\n      <input class=\"form-field__input\" id=\"destination\" type=\"text\" [(ngModel)]=\"destination\" name=\"destination\">\r\n    </div>\r\n\r\n    <div class=\"botao-wrapper\">\r\n      <button class=\"botao\" type=\"submit\">Transfer</button>\r\n    </div>\r\n\r\n  </form>\r\n</section>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}